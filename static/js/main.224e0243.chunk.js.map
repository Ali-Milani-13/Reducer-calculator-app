{"version":3,"sources":["styles/Holder.module.css","styles/Button.module.css","styles/LCD.module.css","components/Button.js","components/LCD.js","components/ButtonHolder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","value","onClick","style","useState","click","setClick","className","btnStyles","btn","e","setTimeout","backgroundColor","LCD","first_value","second_value","is_operator_got","operator_type","number","LCDvalue","Number","LCDstyle","ButtonHolder","dispatch","button","holderstyle","btnContainer","button_wrapper","type","ACTIONS","RESET_ALL","GET_VALUE","payload","target","GET_OPERATOR","GET_RESULT","GET_CONTINUE","SET_FIRST_BACK","initialState","reducer","state","action","result","concat","App","useReducer","useEffect","firstUpdate","useRef","current","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.224e0243.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnContainer\":\"Holder_btnContainer__1Vttc\",\"button_wrapper\":\"Holder_button_wrapper__1fKMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__ngxcI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LCD\":\"LCD_LCD__3qAmK\"};","import React, { useState } from \"react\";\r\nimport btnStyles from \"../styles/Button.module.css\";\r\nconst Button = ({ value, onClick, style }) => {\r\n  const [click, setClick] = useState(false);\r\n  const clickHandler = () => {\r\n    setClick(true);\r\n    setTimeout(() => {\r\n      setClick(false);\r\n    }, 100);\r\n  };\r\n  return (\r\n    <button\r\n      className={btnStyles.btn}\r\n      onClick={(e) => {\r\n        onClick(e);\r\n        clickHandler();\r\n      }}\r\n      style={\r\n        click ? { backgroundColor: \"yellow\" } : { backgroundColor: \"orange\" }\r\n      }\r\n      value={value}\r\n    >\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport LCDstyle from \"../styles/LCD.module.css\";\r\nconst LCD = ({\r\n  first_value,\r\n  second_value,\r\n  is_operator_got,\r\n  operator_type,\r\n  number,\r\n}) => {\r\n  let LCDvalue = 0;\r\n  if (first_value !== \"\" && is_operator_got !== true) {\r\n    LCDvalue = Number(first_value);\r\n  } else {\r\n    LCDvalue = Number(second_value);\r\n  }\r\n  return (\r\n    <div className={LCDstyle.LCD}>\r\n      <b>{operator_type === \"=\" ? number : LCDvalue}</b>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LCD;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport LCD from \"./LCD\";\r\nimport { ACTIONS } from \"../App\";\r\nimport holderstyle from \"../styles/Holder.module.css\";\r\nconst ButtonHolder = ({\r\n  dispatch,\r\n  first_value,\r\n  second_value,\r\n  is_operator_got,\r\n  button,\r\n  number,\r\n  operator_type,\r\n}) => {\r\n  return (\r\n    <div className={holderstyle.btnContainer}>\r\n      <LCD\r\n        first_value={first_value}\r\n        second_value={second_value}\r\n        is_operator_got={is_operator_got}\r\n        button={button}\r\n        operator_type={operator_type}\r\n        number={number}\r\n        dispatch={dispatch}\r\n      />\r\n      <div className={holderstyle.button_wrapper}>\r\n        <Button\r\n          value=\"CE\"\r\n          onClick={() => {\r\n            dispatch({ type: ACTIONS.RESET_ALL });\r\n          }}\r\n        />\r\n        <Button\r\n          value={1}\r\n          onClick={(e) => {\r\n            dispatch({\r\n              type: ACTIONS.GET_VALUE,\r\n              payload: { value: e.target.value },\r\n            });\r\n          }}\r\n        />\r\n        <Button\r\n          value={2}\r\n          onClick={(e) => {\r\n            dispatch({\r\n              type: ACTIONS.GET_VALUE,\r\n              payload: { value: e.target.value },\r\n            });\r\n          }}\r\n        />\r\n        <Button\r\n          value={3}\r\n          onClick={(e) => {\r\n            dispatch({\r\n              type: ACTIONS.GET_VALUE,\r\n              payload: { value: e.target.value },\r\n            });\r\n          }}\r\n        />\r\n        <Button\r\n          value={4}\r\n          onClick={(e) => {\r\n            dispatch({\r\n              type: ACTIONS.GET_VALUE,\r\n              payload: { value: e.target.value },\r\n            });\r\n          }}\r\n        />\r\n        <Button\r\n          value={5}\r\n          onClick={(e) => {\r\n            dispatch({\r\n              type: ACTIONS.GET_VALUE,\r\n              payload: { value: e.target.value },\r\n            });\r\n          }}\r\n        />\r\n        <Button\r\n          value={6}\r\n          onClick={(e) => {\r\n            dispatch({\r\n              type: ACTIONS.GET_VALUE,\r\n              payload: { value: e.target.value },\r\n            });\r\n          }}\r\n        />\r\n        <Button\r\n          value={7}\r\n          onClick={(e) => {\r\n            dispatch({\r\n              type: ACTIONS.GET_VALUE,\r\n              payload: { value: e.target.value },\r\n            });\r\n          }}\r\n        />\r\n        <Button\r\n          value={8}\r\n          onClick={(e) => {\r\n            dispatch({\r\n              type: ACTIONS.GET_VALUE,\r\n              payload: { value: e.target.value },\r\n            });\r\n          }}\r\n        />\r\n        <Button\r\n          value={9}\r\n          onClick={(e) => {\r\n            dispatch({\r\n              type: ACTIONS.GET_VALUE,\r\n              payload: { value: e.target.value },\r\n            });\r\n          }}\r\n        />\r\n        <Button\r\n          value={0}\r\n          onClick={(e) => {\r\n            dispatch({\r\n              type: ACTIONS.GET_VALUE,\r\n              payload: { value: e.target.value },\r\n            });\r\n          }}\r\n        />\r\n        <Button\r\n          value=\"+\"\r\n          onClick={(e) => {\r\n            dispatch({\r\n              type: ACTIONS.GET_OPERATOR,\r\n              payload: { value: e.target.value },\r\n            });\r\n          }}\r\n        />\r\n        <Button\r\n          value=\"-\"\r\n          onClick={(e) => {\r\n            dispatch({\r\n              type: ACTIONS.GET_OPERATOR,\r\n              payload: { value: e.target.value },\r\n            });\r\n          }}\r\n        />\r\n        <Button\r\n          value=\"*\"\r\n          onClick={(e) => {\r\n            dispatch({\r\n              type: ACTIONS.GET_OPERATOR,\r\n              payload: { value: e.target.value },\r\n            });\r\n          }}\r\n        />\r\n        <Button\r\n          value=\"/\"\r\n          onClick={(e) => {\r\n            dispatch({\r\n              type: ACTIONS.GET_OPERATOR,\r\n              payload: { value: e.target.value },\r\n            });\r\n          }}\r\n        />\r\n        <Button\r\n          value=\"=\"\r\n          onClick={(e) => {\r\n            dispatch({\r\n              type: ACTIONS.GET_RESULT,\r\n              payload: { value: e.target.value },\r\n            });\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonHolder;\r\n","import React, { useReducer, useEffect, useRef } from \"react\";\r\nimport \"./App.css\";\r\nimport ButtonHolder from \"./components/ButtonHolder\";\r\nexport const ACTIONS = {\r\n  GET_VALUE: \"GET_VALUE\",\r\n  GET_OPERATOR: \"GET_OPERATOR\",\r\n  RESET_ALL: \"RESET_ALL\",\r\n  GET_RESULT: \"GET_RESULT\",\r\n  GET_CONTINUE: \"GET_CONTINUE\",\r\n  SET_FIRST_BACK: \"SET_FIRST_BACK\",\r\n};\r\nconst initialState = {\r\n  first_value: \"\",\r\n  second_value: \"\",\r\n  is_operator_got: false,\r\n  operator_type: \"\",\r\n  number: 0,\r\n};\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS.RESET_ALL:\r\n      return {\r\n        first_value: \"\",\r\n        second_value: \"\",\r\n        operator_type: \"\",\r\n        is_operator_got: false,\r\n        number: 0,\r\n        result: 0,\r\n      };\r\n    case ACTIONS.GET_VALUE:\r\n      if (state.is_operator_got === false) {\r\n        return {\r\n          ...state,\r\n          first_value: state.first_value.concat(action.payload.value),\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        second_value: state.second_value.concat(action.payload.value),\r\n      };\r\n    case ACTIONS.GET_OPERATOR:\r\n      return {\r\n        ...state,\r\n        operator_type: action.payload.value,\r\n        is_operator_got: true,\r\n      };\r\n    case ACTIONS.GET_RESULT:\r\n      switch (state.operator_type) {\r\n        case \"+\":\r\n          return {\r\n            ...state,\r\n            number: Number(state.first_value) + Number(state.second_value),\r\n            operator_type: \"=\",\r\n          };\r\n        case \"-\":\r\n          return {\r\n            ...state,\r\n            number: Number(state.first_value) - Number(state.second_value),\r\n            operator_type: \"=\",\r\n          };\r\n        case \"*\":\r\n          return {\r\n            ...state,\r\n            number: Number(state.first_value) * Number(state.second_value),\r\n            operator_type: \"=\",\r\n          };\r\n        case \"/\":\r\n          return {\r\n            ...state,\r\n            number: Number(state.first_value) / Number(state.second_value),\r\n            operator_type: \"=\",\r\n          };\r\n\r\n        default:\r\n          return { state };\r\n      }\r\n    case ACTIONS.GET_CONTINUE:\r\n      return {\r\n        ...state,\r\n        first_value: state.number,\r\n        second_value: \"\",\r\n      };\r\n    case ACTIONS.SET_FIRST_BACK:\r\n      return {\r\n        ...state,\r\n        first_value: \"\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  useEffect(() => {\r\n    if (state.first_value === 0) {\r\n      dispatch({ type: ACTIONS.SET_FIRST_BACK });\r\n    }\r\n  }, [state.first_value]);\r\n  const firstUpdate = useRef(true);\r\n  useEffect(() => {\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false;\r\n      return;\r\n    }\r\n    dispatch({ type: ACTIONS.GET_CONTINUE });\r\n  }, [state.number]);\r\n  return (\r\n    <div className=\"App\">\r\n      <ButtonHolder\r\n        dispatch={dispatch}\r\n        first_value={state.first_value}\r\n        second_value={state.second_value}\r\n        is_operator_got={state.is_operator_got}\r\n        number={state.number}\r\n        operator_type={state.operator_type}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}